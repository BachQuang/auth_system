{"version":3,"sources":["containers/Home.js","containers/Activate.js","actions/type.js","actions/auth.js","containers/Login.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","containers/Signup.js","components/Navbar.js","hocs/Layout.js","reducers/auth.js","reducers/index.js","store.js","App.js","index.js"],"names":["Home","className","class","to","role","Activate","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATION_SUCCESS","AUTHENTICATION_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","GOOGLE_AUTH_FAIL","GOOGLE_AUTH_SUCCESS","LOGOUT","load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","process","res","type","payload","data","connect","state","isAuthenticated","auth","login","email","password","body","JSON","stringify","post","console","log","useState","formData","setFormData","onChange","e","target","name","value","continueWithGoogle","window","location","replace","authorization_url","onSubmit","preventDefault","placeholder","required","minLength","onClick","reset_password","requestSent","setRequestSent","reset_password_confirm","uid","token","new_password","re_new_password","match","params","Signup","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","checkAuthenticated","code","googleAuthenticate","details","formBody","Object","keys","map","key","encodeURIComponent","join","props","useLocation","useEffect","values","queryString","parse","search","children","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Login","ResetPassword","ResetPasswordConfirm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33cf01bb.chunk.js","sourcesContent":["import React from 'react';\nimport  {Link} from 'react-router-dom';\nconst Home = () => (\n    <div className='container'>\n        <div class='jumbotron mt-5'>\n            <h1 class=\"display-4\">Welcome to Auth System</h1>\n            <p class=\"lead\">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>\n            <p class=\"lead\"></p>\n            <hr class=\"my-4\"/>\n            <p>Click to Log In button</p>\n            <Link class= 'btn btn-primary btn-lg' to='/login' role='button'>Log in</Link>\n        </div>\n    </div>\n)\n\nexport default Home;\n","import React from 'react';\n\nconst Activate = () => (\n    <div>\n    </div>\n)\n\nexport default Activate;\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const USER_LOADED_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const USER_LOADED_FAIL = 'LOAD_USER_FAIL'\nexport const AUTHENTICATION_SUCCESS = 'AUTHENTICATION_SUCCESS'\nexport const AUTHENTICATION_FAIL = 'AUTHENTICATION_FAIL'\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS'\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL'\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS'\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL'\nexport const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL'\nexport const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS'\nexport const LOGOUT = 'LOGOUT'","import  {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATION_SUCCESS,\n    AUTHENTICATION_FAIL,\n    LOGOUT,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    GOOGLE_AUTH_SUCCESS,\n    GOOGLE_AUTH_FAIL\n}from './type'\nimport axios from 'axios'\n\nexport const load_user = () => async dispatch => {\n    if (localStorage.getItem('access')){\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n                'Accept': 'application/json',\n            }\n        };\n        try{\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config)\n            \n            dispatch({\n                type: USER_LOADED_SUCCESS,\n                payload: res.data\n            });\n        }\n        catch(err){\n            dispatch({\n                type: USER_LOADED_FAIL\n            })\n        }\n    }\n    else{\n        dispatch({\n            type: USER_LOADED_FAIL\n        })\n    }\n}\n\nexport const googleAuthenticate = (state, code) => async dispatch => {\n    console.log(localStorage.getItem('access'))\n    if (state && code && !localStorage.getItem('access')){\n        console.log(state + code + localStorage.getItem('access'))\n        const config = {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        };\n\n        const details = {\n            'state': state,\n            'code': code\n        };\n\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\n\n        try{\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?${formBody}`, config)\n            dispatch({\n                type: GOOGLE_AUTH_SUCCESS,\n                payload: res.data\n            });\n            dispatch(load_user())\n        } catch (err){\n            dispatch({\n                type: GOOGLE_AUTH_FAIL\n            });\n        }\n    }\n}\n\nexport const checkAuthenticated = () => async dispatch => {\n    if (localStorage.getItem('access')){\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n            }\n        }\n        const body = JSON.stringify({ token: localStorage.getItem('access') })\n\n        try{\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\n            if (res.data.code !== 'token_not_valid'){\n                dispatch({\n                    type: AUTHENTICATION_SUCCESS\n                })\n            }\n            else{\n                dispatch({\n                    type: AUTHENTICATION_FAIL\n                })\n            }\n        }catch(err){\n            dispatch({\n                type: AUTHENTICATION_FAIL\n            })\n        }\n    }\n    else{\n        dispatch({\n            type: AUTHENTICATION_FAIL\n        })\n    }\n}\n\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n    const body = JSON.stringify({email, password});\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config)\n        console.log(res)\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        })\n        dispatch(load_user())\n    } catch(err){\n        console.log('Log in fail')\n        dispatch({\n            type: LOGIN_FAIL,\n        })\n    }\n}\n\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config)\n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\n        })\n    }catch(err){\n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_FAIL\n        })\n    }\n}\n\nexport const reset_password = (email) => async dispatch =>{\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n    const body = JSON.stringify({ email });\n    console.log(body)\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config)\n\n        dispatch({\n            type: PASSWORD_RESET_SUCCESS\n        })\n    } catch (error) {\n        dispatch({\n            type: PASSWORD_RESET_FAIL\n        })\n    }\n}\n\nexport const logout = () => dispatch => {\n    dispatch({\n        type: LOGOUT\n    })\n}","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport { login } from '../actions/auth';\nimport axios from 'axios';\nconst Login = ({login, isAuthenticated}) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n\n    const {email, password} = formData\n\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    })\n\n    const onSubmit = e => {\n        e.preventDefault()\n        login(email, password)\n    }\n\n    const continueWithGoogle = async () => {\n        try{\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=http://localhost:8000`)\n            window.location.replace(res.data.authorization_url);\n        }\n        catch(err){\n\n        }\n    }\n\n    if (isAuthenticated) {\n        return <Redirect to='/'/>\n    }\n    return (\n        <div className='container mt-5'>\n            <h1>Sign In</h1>\n            <p>Sign in to your Account</p>\n            <form onSubmit = {e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='email'\n                        placeholder='Enter your email here'\n                        name='email'\n                        value={email}\n                        onChange= {e => onChange(e)}\n                        required\n                        />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Enter your password here'\n                        name='password'\n                        value={password}\n                        onChange= {e => onChange(e)}\n                        minLength='6'\n                        required\n                        />\n                </div>\n                <button className = 'btn btn-primary' type='submit'>Log in</button>\n            </form>\n            <button className='btn btn-danger mt-3' onClick={continueWithGoogle}>\n                 Continue with Google\n            </button>\n            <p className='mt-3'>\n                Don't have an account? <Link to='/signup'>Sign up</Link>\n            </p>\n            <p className='mt-3'>\n                Forgot your password? <Link to='/reset-password'>Reset Password </Link>\n            </p>\n        </div>\n    )\n}\n\nconst mapStatetoProps = state =>({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStatetoProps, { login })(Login);\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password } from '../actions/auth';\n\nconst ResetPassword = ({ reset_password }) => {\n    const [requestSent, setRequestSent] = useState(false);\n    const [formData, setFormData] = useState({\n        email: ''\n    });\n\n    const { email } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        reset_password(email);\n        setRequestSent(true);\n    };\n\n    if (requestSent) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container mt-5'>\n            <h1>Request Password Reset:</h1>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='email'\n                        placeholder='Email'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\n            </form>\n        </div>\n    );\n};\n\nexport default connect(null, { reset_password })(ResetPassword);","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password_confirm } from '../actions/auth';\n\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\n    const [requestSent, setRequestSent] = useState(false);\n    const [formData, setFormData] = useState({\n        new_password: '',\n        re_new_password: ''\n    });\n\n    const { new_password, re_new_password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        const uid = match.params.uid;\n        const token = match.params.token;\n\n        reset_password_confirm(uid, token, new_password, re_new_password);\n        setRequestSent(true);\n    };\n\n    if (requestSent) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container mt-5'>\n            <form onSubmit={e => onSubmit(e)}>\n            <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='New Password'\n                        name='new_password'\n                        value={new_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Confirm New Password'\n                        name='re_new_password'\n                        value={re_new_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\n            </form>\n        </div>\n    );\n};\n\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);","import React from 'react';\n\nconst Signup = () => (\n    <div>\n    </div>\n)\n\nexport default Signup;\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nconst Navbar = () => (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <Link className=\"navbar-brand\" to=\"/\">Auth System</Link>\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n    </button>    \n    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav\">\n        <Link className=\"nav-item nav-link active\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\n        <Link className=\"nav-item nav-link\" to=\"/login\">Log In</Link>\n        <Link className=\"nav-item nav-link\" to=\"/signup\">Sign Up</Link>\n        </div>\n    </div>\n</nav>\n)\n\nexport default Navbar;\n","import React, { useEffect } from 'react';\nimport { useLocation} from 'react-router-dom';\nimport Navbar from '../components/Navbar';\nimport { connect } from 'react-redux';\nimport { checkAuthenticated, load_user, googleAuthenticate } from '../actions/auth';\nimport queryString from 'query-string'\n\nconst Layout = (props) => {\n    let location = useLocation();\n\n    useEffect(() => {\n        const values = queryString.parse(location.search);\n        const state = values.state ? values.state : null;\n        const code = values.code ? values.code : null;\n\n        console.log('State: ' + state)\n        console.log('Code: ' + code)\n\n        if (state != null && code != null) {\n            props.googleAuthenticate(state, code);\n        }\n        else{\n            console.log('asdadas++++')\n            props.checkAuthenticated();\n            props.load_user();\n        }\n    }, [location]);\n\n    return (\n        <div>\n            <Navbar />\n            {props.children}\n        </div>\n    );\n};\n\nexport default connect(null, { checkAuthenticated, load_user, googleAuthenticate })(Layout);","import  {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATION_SUCCESS,\n    AUTHENTICATION_FAIL,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    GOOGLE_AUTH_SUCCESS,\n    GOOGLE_AUTH_FAIL,\n    LOGOUT\n}from '../actions/type';\n\nconst initialState = {\n    access: localStorage.getItem('access'),\n    refresh: localStorage.getItem('refresh'),\n    isAuthenticated: null,\n    user: null\n}\n\nexport default function(state = initialState, action){\n    const {type, payload} = action\n    switch(type){\n        case AUTHENTICATION_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true\n            }\n        case LOGIN_SUCCESS:\n            localStorage.setItem('access', payload.access)\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh\n            }\n        case USER_LOADED_SUCCESS:\n            return {\n                ...state,\n                user: payload\n            }\n        case AUTHENTICATION_FAIL:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case USER_LOADED_FAIL:\n            return {\n                ...state,\n                user: null\n            }\n        case GOOGLE_AUTH_SUCCESS:\n            localStorage.setItem('access', payload.access)\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh\n            }\n        case GOOGLE_AUTH_FAIL:\n        case LOGOUT:\n        case LOGIN_FAIL:\n            localStorage.removeItem('access')\n            localStorage.removeItem('refresh')\n            return{\n                ...state,\n                isAuthenticated: false,\n                access: null,\n                refresh: null,\n                user: null\n            }\n        case PASSWORD_RESET_CONFIRM_FAIL:\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\n        case PASSWORD_RESET_FAIL:\n        case PASSWORD_RESET_SUCCESS:\n            return {\n                ...state\n            }\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux';\nimport auth from './auth';\n\nexport default combineReducers({\n    auth\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Home from './containers/Home';\nimport Activate from './containers/Activate';\nimport Login from './containers/Login';\nimport ResetPassword from './containers/ResetPassword';\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\nimport Signup from './containers/Signup';\nimport Layout from './hocs/Layout';\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nconst App = () => (\n  <Provider store= {store}>\n    <Router>\n      <Layout>\n        <Switch>\n          <Route  exact path='/' component={Home}/>\n          <Route  exact path='/login' component={Login}/>\n          <Route  exact path='/signup' component={Signup}/>\n          <Route  exact path='/reset-password' component={ResetPassword}/>\n          <Route  exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm}/>\n          <Route  exact path='/activate/:uid/:token' component={Activate}/>\n        </Switch>\n      </Layout>\n    </Router>\n  </Provider>\n  \n);\n\nexport default App; \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}